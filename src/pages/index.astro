---
import Layout from '../layouts/Layout.astro';
import { ShareButtons } from '../components/ShareButtons';
import { allPosts } from "../data/posts.ts";

// Função para buscar notícias da NewsAPI
async function fetchNews() {
  const API_KEY = import.meta.env.NEWS_API_KEY;
  const response = await fetch(
    `https://newsapi.org/v2/everything?q=(erp OR "enterprise resource planning" OR "industrial automation")&language=pt&sortBy=publishedAt&apiKey=${API_KEY}`
  );
  const data = await response.json();
  return data.articles?.slice(0, 3) || [];
}

const newsArticles = await fetchNews();

const categoriesCount = allPosts.reduce((acc: Record<string, number>, post) => {
  acc[post.category] = (acc[post.category] || 0) + 1;
  return acc;
}, {} as Record<string, number>);

---

<Layout title="Blog Kodiak ERP - Insights sobre Gestão Industrial"
        categories={categoriesCount}>
  <div class="space-y-12">
    <!-- Featured Section -->
    <section class="relative bg-gradient-to-r from-blue-600 to-indigo-700 text-white rounded-2xl p-8 overflow-hidden">
      <div class="absolute inset-0 bg-pattern opacity-10"></div>
      <div class="relative z-10">
        <h1 class="text-5xl font-bold mb-6">Blog
          <span class="bg-white text-transparent bg-clip-text"> Kodiak ERP </span>
        </h1>
        <p class="text-xl text-white/90 max-w-3xl">
          Insights, tendências e melhores práticas para otimizar sua gestão industrial com tecnologia de ponta.
        </p>
      </div>
    </section>

    <!-- Filter Categories -->
    <div class="flex flex-wrap gap-4 my-8">
      <button
        class="category-filter px-4 py-2 bg-white rounded-full text-sm font-medium shadow-sm hover:shadow-md transition active"
        data-category="all"
      >
        Todas
      </button>
      {Object.entries(categoriesCount).map(([category, count]) => (
        <button
          class="category-filter px-4 py-2 bg-white rounded-full text-sm font-medium shadow-sm hover:shadow-md transition"
          data-category={category}
        >
          {category} ({count})
        </button>
      ))}
    </div>

    <!-- News API Section -->
    <section class="bg-white rounded-xl shadow-lg p-6">
      <h2 class="text-2xl font-bold text-gray-900 mb-6">Notícias do Setor</h2>
      <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
        {newsArticles.map((article: any) => (
          <article class="space-y-3">
            <img
              src={article.urlToImage || 'https://via.placeholder.com/400x200'}
              alt={article.title}
              class="w-full h-48 object-cover rounded-lg"
            />
            <h3 class="font-semibold text-lg line-clamp-2">{article.title}</h3>
            <p class="text-gray-600 text-sm line-clamp-3">{article.description}</p>
            <div class="flex justify-between items-center">
              <a
                href={article.url}
                target="_blank"
                rel="noopener noreferrer"
                class="text-blue-600 hover:text-blue-800 font-medium text-sm"
              >
                Ler mais →
              </a>
              <ShareButtons client:load url={article.url} title={article.title} />
            </div>
          </article>
        ))}
      </div>
    </section>

    <!-- Recent Posts Grid -->
    <section>
      <h2 class="text-2xl font-bold text-gray-900 mb-6">Posts Recentes</h2>
      <div id="posts-container" class="grid grid-cols-1 md:grid-cols-2 gap-8">
        {allPosts.map(post => (
          <article class="post bg-white rounded-lg shadow-lg overflow-hidden transform hover:scale-[1.02] transition-transform" data-slug={post.slug} data-category={post.category}>
            <a href={`/posts/${post.slug}`} class="block">
              <img src={post.image} alt={post.title} class="w-full h-48 object-cover" />
              <div class="p-6">
                <div class="flex items-center gap-4 mb-4">
                  <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full text-sm font-medium">
                    {post.category}
                  </span>
                  <time class="text-gray-500 text-sm">{post.date}</time>
                </div>
                <h3 class="text-xl font-bold mb-2 text-gray-900 hover:text-blue-600 transition">{post.title}</h3>
                <p class="text-gray-600 mb-4">{post.excerpt}</p>
              </div>
            </a>
            <div class="px-6 pb-6 flex justify-between items-center">
              <div class="flex items-center space-x-4">
                <button class="like-button flex items-center space-x-1 text-gray-500 hover:text-red-500 transition"
                        data-slug={post.slug}>
                  <i class="fas fa-heart"></i>
                  <span class="like-count text-sm">0</span>
                </button>
              </div>
              <ShareButtons client:load url={`${Astro.url.origin}/posts/${post.slug}`} title={post.title} />
            </div>
          </article>
        ))}
      </div>
    </section>
  </div>

  <script>
    interface Post {
      category: string;
      style: CSSStyleDeclaration;
    }

    // Category filtering
    const categoryButtons = document.querySelectorAll<HTMLButtonElement>('.category-filter');
    const posts = document.querySelectorAll<HTMLElement>('.post');

    categoryButtons.forEach(button => {
      button.addEventListener('click', () => {
        const category = button.getAttribute('data-category');
        
        // Update active state of buttons
        categoryButtons.forEach(btn => btn.classList.remove('active'));
        button.classList.add('active');
        
        // Filter posts
        posts.forEach(post => {
          if (category === 'all') {
            post.style.display = 'block';
          } else {
            const postCategory = post.getAttribute('data-category');
            post.style.display = postCategory === category ? 'block' : 'none';
          }
        });
      });
    });

    // Newsletter form submission
    const form = document.querySelector<HTMLFormElement>('form');
    const emailInput = form?.querySelector<HTMLInputElement>('input[type="email"]');

    form?.addEventListener('submit', async (e) => {
      e.preventDefault();
      if (!emailInput?.value) return;

      try {
        const response = await fetch('/api/newsletter', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ email: emailInput.value }),
        });

        const data = await response.json();
        alert(data.message);
        if (data.success) {
          emailInput.value = '';
        }
      } catch (error) {
        alert('Erro ao processar sua inscrição. Tente novamente.');
      }
    });
  </script>
</Layout>

<style>
  .bg-pattern {
    background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Cpath d='M36 34v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zm0-30V0h-2v4h-4v2h4v4h2V6h4V4h-4zM6 34v-4H4v4H0v2h4v4h2v-4h4v-2H6zM6 4V0H4v4H0v2h4v4h2V6h4V4H6z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  }

  .category-filter.active {
    @apply bg-blue-600 text-white;
  }
</style>