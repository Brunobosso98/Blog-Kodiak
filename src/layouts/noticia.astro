---
import { Header } from '../components/header';
import { Footer } from '../components/footer';
import { ShareButtons } from '../components/ShareButtons';
import "../styles/globals.css";

interface Props {
  title: string;
  description?: string;
}
const postSlug = Astro.url.pathname.split('/').pop();
const { title, description = "Blog Kodiak ERP - Insights sobre Gestão Industrial" } = Astro.props;

const popularPosts = [
  {
    title: "Como Implementar um ERP com Sucesso",
    date: "2024-02-20",
    url: "/posts/implementar-erp-sucesso"
  },
  {
    title: "Tendências de Automação Industrial",
    date: "2024-02-18",
    url: "/posts/tendencias-automacao"
  },
  {
    title: "Guia de Gestão de Produção",
    date: "2024-02-15",
    url: "/posts/guia-gestao-producao"
  },
  {
    title: "Indústria 4.0 na Prática",
    date: "2024-02-12",
    url: "/posts/industria-4-pratica"
  },
  {
    title: "Melhores Práticas em ERP",
    date: "2024-02-10",
    url: "/posts/melhores-praticas-erp"
  }
];
---

<!doctype html>
<html lang="pt-BR">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="description" content={description} />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css" />
  </head>
  <body class="min-h-screen bg-gray-50">
    <Header />
    <!-- Main Content -->
    <div class="mt-16 mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <div class="flex flex-col lg:flex-row gap-8">
        <!-- Sidebar -->
        <aside class="lg:w-80 space-y-8">
          <!-- Search Bar -->
          <div class="bg-white rounded-lg shadow p-6">
            <form class="space-y-4">
              <div class="relative">
                <input
                  type="search"
                  placeholder="Buscar notícias..."
                  class="w-full pl-10 pr-4 py-2 rounded-lg border border-gray-300 focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                />
                <i class="fas fa-search absolute left-3 top-1/2 -translate-y-1/2 text-gray-400"></i>
              </div>
            </form>
          </div>

          <!-- Author Profile -->
          <div class="bg-white rounded-lg shadow p-6 text-center">
            <img
             src="https://i.pravatar.cc/150"
             alt="Autor"
             class="w-32 h-32 rounded-full mx-auto mb-4"
            />
            <h3 class="text-xl font-semibold text-gray-900 mb-2">João Silva</h3>
            <p class="text-gray-600 mb-4">
             Especialista em Gestão Industrial e Tecnologia ERP
            </p>
             <div class="flex justify-center space-x-4">
              <a href="#" class="text-blue-600 hover:text-blue-800">
               <i class="fab fa-linkedin text-2xl"></i>
              </a>
               <a href="#" class="text-blue-400 hover:text-blue-600">
                <i class="fab fa-twitter text-2xl"></i>
               </a>
              <a href="#" class="text-gray-800 hover:text-gray-600">
               <i class="fab fa-github text-2xl"></i>
              </a>
             </div>
          </div>

          <!-- Popular Posts -->
          <div class="bg-white rounded-lg shadow p-6">
            <h3 class="text-lg font-semibold text-gray-900 mb-4">Posts Populares</h3>
            <ul class="space-y-4">
              {popularPosts.map(post => (
                <li>
                  <a href={post.url} class="group">
                    <h4 class="text-gray-900 group-hover:text-blue-600 font-medium mb-1">
                      {post.title}
                    </h4>
                    <p class="text-sm text-gray-500">{post.date}</p>
                  </a>
                </li>
              ))}
            </ul>
          </div>
        </aside>

        <!-- Main Content Area -->
        <main class="lg:flex-1">
          <slot />
        
          <!-- Botões de Curtida e Compartilhamento -->
          <div class="flex items-center justify-between mt-8 border-t border-gray-200 pt-4">
            <div class="flex items-center space-x-4">
              <!-- Botão de Curtida -->
              <button id="like-button" class="mr-3 flex items-center space-x-1 text-gray-500 hover:text-red-500 transition" data-slug={Astro.url.pathname.split('/').pop()}>
                <i class="fas fa-heart"></i>
                <span class="like-count text-sm">0</span>
              </button>
        
              <!-- Botão de Compartilhamento -->
              <ShareButtons client:load url={`${Astro.url.origin}/posts/${postSlug}`} title="/" />
            </div>
            </div>
          </div>
        </main>
        
      </div>
    </div>

    <Footer />

    <script>
      // Inicializar contagem de likes
      const likeButton = document.getElementById('like-button');
      const postSlug = likeButton?.dataset.slug;


      async function initializeLikes() {
        if (!postSlug) return;
        
        try {
          const storedUser = localStorage.getItem('user');
          const userId = storedUser ? JSON.parse(storedUser).id : '';
          
          const response = await fetch(`/api/likes?postSlug=${postSlug}&userId=${userId}`);
          const data = await response.json();
          
          if (data.success) {
            const countElement = likeButton?.querySelector('.like-count');
            if (countElement) {
              countElement.textContent = data.likesCount.toString();
            }
            if (data.isLiked) {
              likeButton?.classList.add('text-red-500');
            }
          }
        } catch (error) {
          console.error('Error fetching like count:', error);
        }
      }

      // Adicionar evento de clique para o like
      likeButton?.addEventListener('click', async (e) => {
        e.preventDefault();
        if (!postSlug) {
          console.error('Post slug não encontrado');
          return;
        }

        const storedUser = localStorage.getItem('user');
        const userId = storedUser ? JSON.parse(storedUser).id : '';
        if (!userId) {
          alert('Você precisa estar logado para curtir um post');
          return;
        }

        try {
          const response = await fetch('/api/likes', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ userId, postSlug }),
          });

          const data = await response.json();
          if (data.success) {
            const countElement = likeButton.querySelector('.like-count');
            if (countElement) {
              countElement.textContent = data.likesCount.toString();
            }
            likeButton.classList.toggle('text-red-500');
          } else {
            throw new Error(data.message);
          }
        } catch (error) {
          console.error('Erro ao processar like:', error);
          alert('Erro ao processar sua curtida. Tente novamente.');
        }
      });

      // Funções de compartilhamento
      function shareOnTwitter() {
        const url = encodeURIComponent(window.location.href);
        const text = encodeURIComponent(document.title);
        window.open(`https://twitter.com/intent/tweet?url=${url}&text=${text}`, '_blank');
      }

      function shareOnLinkedIn() {
        const url = encodeURIComponent(window.location.href);
        window.open(`https://www.linkedin.com/sharing/share-offsite/?url=${url}`, '_blank');
      }

      function shareOnWhatsApp() {
        const url = encodeURIComponent(window.location.href);
        const text = encodeURIComponent(document.title);
        window.open(`https://api.whatsapp.com/send?text=${text}%20${url}`, '_blank');
      }

      function copyLink() {
        navigator.clipboard.writeText(window.location.href)
          .then(() => {
            alert('Link copiado para a área de transferência!');
          })
          .catch(err => console.error('Erro ao copiar link:', err));
      }

      // Inicializar likes ao carregar a página
      initializeLikes();
    </script>
  </body>
</html>

<style is:global>
  html {
    font-family: system-ui, sans-serif;
    scroll-behavior: smooth;
  }
</style>